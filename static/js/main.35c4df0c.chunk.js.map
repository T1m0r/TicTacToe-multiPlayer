{"version":3,"sources":["Components/tic-panel/tic-panel.component.jsx","Components/game-grid/game-grid.component.jsx","Components/stats/stats.component.jsx","Components/header/header.component.jsx","config.js","App.js","reportWebVitals.js","index.js"],"names":["TicPanel","props","onClick","onTic","field","id","className","symbol","GameGrid","fields","map","strikeClass","Stats","stats","class","wins_O","wins_X","draws","Header","won","turn","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onTick","state","fid","fieldsState","slice","turn_sym","setState","firebase","database","ref","set","checkWin","i","length","updateScore","draw","line","dir","console","log","winner","index","cross","winnerClass","clearGameField","empty_board","apps","app","initializeApp","bind","on","snapshot","val","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35c4df0c.chunk.js","sourcesContent":["import React from 'react';\nimport './tic-panel.styles.css';\n\nexport const TicPanel = (props) => (\n    <button onClick={() => props.onTic(props.field.id)} className={`tic-panel panel_${props.field.id}`} >\n        {props.field.symbol}\n    </button>\n);","import React from 'react';\nimport './game-grid.styles.css';\nimport { TicPanel } from \"../tic-panel/tic-panel.component.jsx\";\n\nconst GameGrid = (props) => {\n    return (\n        <div className=\"game-grid\">\n            {props.fields.map(field => (\n                <TicPanel onTic={props.onTic} key={ field.id } field={field}></TicPanel>\n            ))}\n            <div className={`strikethrough ${props.strikeClass}`}><div></div></div>\n        </div>\n    );\n};\n\nexport { GameGrid };","import React from 'react';\nimport './stats.styles.css';\n\nexport const Stats = ({stats}) => {\n    return(\n        <div class=\"stats\">\n                <h1>Stats</h1>\n                <h3>O-wins: {stats.wins_O}</h3>\n                <h3>X-wins: {stats.wins_X}</h3>\n                <h3>Draws: {stats.draws}</h3>\n              </div>\n    );\n};","import React from 'react';\nimport './header.styles.css';\n\nexport const Header = ({won, turn}) => {\n    return (\n        <div class=\"text\">\n            <h1 class=\"heading\">Tic Tac Toe</h1>\n            {won === false &&\n                <p class=\"turn-indicator\">It is {turn}'s turn</p>\n            }\n        </div>\n    );\n};","const config = {\n    apiKey: \"AIzaSyA57LUFFVsY5BpBeu3m0pV-Sg8bJN0Vs_g\",\n    authDomain: \"tictactoe-45218.firebaseapp.com\",\n    databaseURL: \"https://tictactoe-45218-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"tictactoe-45218\",\n    storageBucket: \"tictactoe-45218.appspot.com\",\n    messagingSenderId: \"49023242257\",\n    appId: \"1:49023242257:web:d5c0384bd3e9148653e1b0\",\n  }\n  \n  export default config;","import React, {Component} from 'react';\nimport firebase from 'firebase';\nimport { GameGrid } from './Components/game-grid/game-grid.component.jsx';\nimport { Stats } from './Components/stats/stats.component.jsx';\nimport { Header } from './Components/header/header.component.jsx';\nimport './App.css';\nimport config from './config.js'\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    // Init or call firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n   }else {\n      firebase.app(); // if already initialized, use that one\n   }\n\n    this.state = {\n      fields: [],\n      turn: \"O\",\n      won: false,\n      winner: \"\",\n      winnerClass: \"\",\n      stats: {\n        \"wins_O\": 0,\n        \"wins_X\": 0,\n        \"draws\": 0,\n      }\n    }\n    this.onTick = this.onTick.bind(this)\n  }\n\n  \n  componentDidMount() {\n    let ref = firebase.database().ref('/');\n    ref.on('value', snapshot => {\n      const state = snapshot.val();\n      this.setState(state, () =>{\n        this.checkWin();\n      });\n    });\n  }\n  onTick = (id) => {\n    //firebase.database().ref('/').set(this.state);\n    if(!this.state.won){\n      let fid = id -1\n      let fieldsState = this.state.fields.slice();\n      if(fieldsState[fid].symbol === \"\"){\n        let turn_sym = this.state.turn\n        fieldsState[fid].symbol = turn_sym\n        if( turn_sym === \"O\"){\n          turn_sym = \"X\"\n        }else{\n          turn_sym = \"O\"\n        }\n      this.setState({fields: fieldsState, turn: turn_sym}, () => {\n        firebase.database().ref('/').set(this.state);\n      });\n      this.checkWin()\n    }\n    }\n  }\n  checkWin = () => {\n    let fields = this.state.fields.slice();\n    for(let i = 1; i<= fields.length; i += 3){\n        if (fields[i].symbol !== \"\"){\n          if( fields[i-1].symbol === fields[i].symbol && fields[i].symbol === fields[i+1].symbol){\n            this.updateScore(fields[i].symbol, i, \"row\");\n          }\n        }\n    }\n    for(let i = 0; i<= 2; i++){\n      if (fields[i+3].symbol !== \"\"){\n        if( fields[i].symbol === fields[i+3].symbol && fields[i+3].symbol === fields[i+6].symbol){\n          this.updateScore(fields[i].symbol, i, \"col\");\n        }\n      }\n    }\n    if( fields[4].symbol !== \"\"){\n      if( fields[0].symbol === fields[4].symbol && fields[4].symbol === fields[8].symbol){\n        this.updateScore(fields[4].symbol, 4, \"diag-left\");\n      }\n      if( fields[2].symbol === fields[4].symbol && fields[4].symbol === fields[6].symbol){\n        this.updateScore(fields[4].symbol, 4, \"diag-right\");\n      }\n    }\n\n    //Check draw\n    let draw = true;\n    for(let i=0; i<9; i++){\n      if(fields[i].symbol === \"\"){\n        draw = false\n      }\n    }\n    if(draw){\n      this.updateScore(\"Draw\")\n    }\n  }\n  updateScore = (symbol, line, dir) => {\n    if(symbol === \"Draw\"){\n      console.log(\"Win for Team \", symbol)\n      let stats = this.state.stats\n      stats.draws += 1\n      this.setState({won: true, winner: symbol, stats: stats})\n    } else {\n      console.log(\"Win for Team \", symbol)\n      let stats = this.state.stats\n      let index;\n      if(dir === \"row\"){\n        index = (line+2)/3\n      }else if(dir === \"col\"){\n        index = line + 1\n      }else{\n        index = line\n      }\n      let cross = `${dir}-general ${dir}-${index}-strike`;\n      if ( symbol === \"O\"){\n        stats.wins_O += 1\n      }else{\n        stats.wins_X += 1\n      }\n      this.setState({won: true, winner: symbol, stats: stats, winnerClass: cross})\n    }\n  }\n  clearGameField = () =>{\n    console.log(this.state.fields.slice())\n    let empty_board = this.state.fields.slice()\n    if(this.state.won === true){\n      for(let i=0; i < empty_board.length; i++){\n        empty_board[i].symbol = \"\"\n      }\n      this.setState({fields: empty_board, won: false, winner: \"\", winnerClass: \"\"}, () => {\n        firebase.database().ref('/').set(this.state);\n      });\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <div class=\"paper\">\n          <div class=\"lines\">\n            <Header won={this.state.won} turn={this.state.turn} />\n            <div class=\"content\">\n              <GameGrid onTic={this.onTick} strikeClass={this.state.winnerClass} fields={this.state.fields}></GameGrid>\n                {this.state.won === true &&\n                  <button class=\"btn-clearField\" onClick={this.clearGameField} >Clear Field</button>\n                }\n              <Stats stats={this.state.stats} />\n            </div>\n          </div>\n          <div class=\"holes hole-top\"></div>\n          <div class=\"holes hole-middle\"></div>\n          <div class=\"holes hole-bottom\"></div>\n        </div>\n        <footer class=\"footer\">\n          <p>@T1m0r 2021</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}